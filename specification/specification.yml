openapi: 3.1.0
info:
  title: API сервер для проекта «Что посмотреть».
  description: |-
    * Список ресурсов и маршрутов сервера «Что посмотреть».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0
tags:
  - name: films
    description: Действия с фильмами.
  - name: comments
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователем.
paths:
  /films:
    post:
      tags:
        -films
      summary: Добавление фильма
      description: Добавляет нового фильма

      requestBody:
        description: Информация для создания нового фильма
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createOrUpdateFilm"
        required: true

      responses:
        "201":
          description: Фильм создан. Объект фильма.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/film"

        "400":
          description: Данные не валидны.

        "401":
          description: Пользователь не авторизован.

    get:
      tags:
        -films
      summary: Получение списка фильмов
      description: Получает список фильмов

      requestBody:
        description: Информация для создания нового фильма
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filmsInListLimit"

      responses:
        "200":
          description: Возвращает массив фильмов. 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/films"


  /films/{filmId}:
    put:
      tags:
        -films
      summary: Редактирование фильма
      description: Редактирует карточку фильма

      requestBody:
        description: Информация для редактирования фильма
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createOrUpdateFilm"
        required: true

      responses:
        "201":
          description: Фильм изменён. Объект фильма.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/film"

        "400":
          description: Данные не валидны.

        "401":
          description: Пользователь не авторизован.

        "403":
          description: Недостаточно прав для редактирования фильма.
    
    delete:
      tags:
        -films
      summary: Удаление фильма
      description: Удаляет карточку фильма

      responses:
        "204":
          description: Фильм удалён.

        "401":
          description: Пользователь не авторизован.

        "403":
          description: Недостаточно прав для удаления фильма.


  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createUser"
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"

        "400":
          description: Логин или пароль не валидны.

        "409":
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля

      requestBody:
        description: Информация для авторизации.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/loginUser"
        required: true

      responses:
        "200":
          description: Пользователь авторизован.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/token"

        "400":
          description: Логин или пароль неверный.

        "404":
          description: Пользователь с таким логином не существует

    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю

      responses:
        "200":
          description: Пользователь авторизован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"

  /users/{userId}/avatar:
    post:
      tags:
        - users
      summary: Загрузить изображение аватара
      description: Загружает изображение аватара пользователя. Изображение
        аватара должно быть в формате `png` или `jpg`.

      responses:
        "201":
          description: Пользователь изменен. Объект пользователя.

        "400":
          description: Некорректный формат изображения

        "404":
          description: Пользователь с таким логином не существует.


components:
  schemas:
    createOrUpdateFilm:
      type: object

      properties:
        name:
          type: string
          example: Matrix

        description:
          type: string
          example: A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.

        genre:
          type: string
          example: Drama

        released:
          type: number
          example: 2010

        previewVideoLink:
          type: string
          example: https://11.react.pages.academy/static/film/video/traffic.mp4

        videoLink:
          type: string
          example: https://11.react.pages.academy/static/film/video/bubbles.mp4

        starring:
          type: [string]
          example: Bruce Willis

        director:
          type: string
          example: Quentin Tarantino

        runTime:
          type: number
          example: 130

        posterImage:
          type: string
          example: https://11.react.pages.academy/static/film/poster/matrix.jpg

        backgroundImage:
          type: string
          example: https://11.react.pages.academy/static/film/background/matrix.jpg

        backgroundColor:
          type: string
          example: #B9B27E    

    film:
      type: object

      properties:
        name:
          type: string
          example: Matrix

        description:
          type: string
          example: A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.

        postDate:
          type: string
          format: date-time
          example: 2022-12-22T08:45:40.283Z

        genre:
          type: string
          example: Drama

        released:
          type: number
          example: 2010

        rating:
          type: number
          example: 0

        previewVideoLink:
          type: string
          example: https://11.react.pages.academy/static/film/video/traffic.mp4

        videoLink:
          type: string
          example: https://11.react.pages.academy/static/film/video/bubbles.mp4

        starring:
          type: [string]
          example: Bruce Willis

        director:
          type: string
          example: Quentin Tarantino

        runTime:
          type: number
          example: 130

        commentsAmount:
          type: number
          example: 110

        posterImage:
          type: string
          example: https://11.react.pages.academy/static/film/poster/matrix.jpg

        backgroundImage:
          type: string
          example: https://11.react.pages.academy/static/film/background/matrix.jpg

        backgroundColor:
          type: string
          example: #B9B27E  

    filmsInListLimit:
      type: object

      properties:  
        limit:
          type: number
          example: 100

    films:
      type: object
      format: array

      properties:
        name:
          type: string
          example: Matrix

        postDate:
          type: string
          format: date-time
          example: 2022-12-22T08:45:40.283Z

        genre:
          type: string
          example: Drama
        
        previewVideoLink:
          type: string
          example: https://11.react.pages.academy/static/film/video/traffic.mp4

        userId:
          type: string
          example: 6317c3d6a54ab1061c6434ea

        posterImage:
          type: string
          example: https://11.react.pages.academy/static/film/poster/matrix.jpg

        commentsAmount:
          type: number
          example: 110

    createUser:
      type: object

      properties:
        email:
          type: string
          example: test@lost.local

        userName:
          type: string
          example: Emilia

        password:
          type: string
          example: 123456

    loginUser:
      type: object

      properties:
        userName:
          type: string
          example: Emilia

        password:
          type: string
          example: 123456

    user:
      type: object

      properties:
        id:
          type: string
          example: 6317c3d6a54ab1061c6434ea

        userName:
          type: string
          example: Emilia

        email:
          type: string
          example: test@lost.local

    token:
      type: object

      properties:
        X-token:
          type: string;
          example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
